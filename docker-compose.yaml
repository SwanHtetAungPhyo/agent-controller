
services:
  app:
    build:
      context: core
      dockerfile: Dockerfile
    container_name: agent-core-app
    depends_on:
      - postgresql
      - redis
      - temporal
    environment:
      - DATABASE_URL=postgres://${APP_DATABASE_USERNAME}:${APP_DATABASE_PASSWORD}@postgresql:5432/${APP_DATABASE_NAME}?sslmode=disable
      - REDIS_URL=redis://:${APP_REDIS_PASSWORD}@redis:6379
      - TEMPORAL_ADDRESS=temporal:7233
      - SERVER_PORT=8080
    env_file:
      - .env
    networks:
      - temporal-network
    ports:
      - "8080:8080"
    volumes:
      - ./core/app.log:/app/app.log
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgresql:
    container_name: temporal-postgresql
    image: postgres:${POSTGRESQL_VERSION}
    environment:
      POSTGRES_USER: ${APP_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${APP_DATABASE_PASSWORD}
      POSTGRES_DB: ${APP_DATABASE_NAME}
    env_file:
      - .env
    networks:
      - temporal-network
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./core/db/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${APP_DATABASE_USERNAME} -d ${APP_DATABASE_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    container_name: temporal-redis
    image: redis:${REDIS_VERSION}
    command: >
      redis-server --appendonly yes --requirepass ${APP_REDIS_PASSWORD}
    networks:
      - temporal-network
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  temporal:
    container_name: temporal
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=${APP_DATABASE_USERNAME}
      - POSTGRES_PWD=${APP_DATABASE_PASSWORD}
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    env_file:
      - .env
    networks:
      - temporal-network
    ports:
      - "7233:7233"
    volumes:
      - ./core/dynamicconfig:/etc/temporal/config/dynamicconfig
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7233/health"]
      interval: 30s
      timeout: 10s
      retries: 5


networks:
  temporal-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local