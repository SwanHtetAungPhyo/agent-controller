// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO kainos_user (id, clerk_id, first_name, email) VALUES ($1,$2, $3, $4) returning id, clerk_id, first_name, email, created_at, deleted_at, updated_at
`

type CreateUserParams struct {
	ID        uuid.UUID `json:"id"`
	ClerkID   string    `json:"clerk_id"`
	FirstName *string   `json:"first_name"`
	Email     string    `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (KainosUser, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.ID,
		arg.ClerkID,
		arg.FirstName,
		arg.Email,
	)
	var i KainosUser
	err := row.Scan(
		&i.ID,
		&i.ClerkID,
		&i.FirstName,
		&i.Email,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.UpdatedAt,
	)
	return i, err
}
